# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-09 18:16
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.TextField()),
                ('audit_type', models.TextField(choices=[('LOGIN', 'LOGIN'), ('KEYFETCH', 'KEYFETCH')])),
                ('audit_status', models.TextField(choices=[('OK', 'OK'), ('QUERIED', 'QUERIED'), ('WARNING', 'WARNING'), ('OPEN', 'OPEN'), ('DANGER', 'DANGER')])),
                ('reported_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AuditNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('public_id', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('entity_type', models.TextField(choices=[('HUMAN', 'HUMAN'), ('ROBOT', 'ROBOT')])),
            ],
        ),
        migrations.CreateModel(
            name='EntityOnServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glacis_core.Entity')),
            ],
        ),
        migrations.CreateModel(
            name='Key',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField()),
                ('public_id', models.TextField()),
                ('name', models.TextField()),
                ('default', models.BooleanField()),
                ('active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField()),
                ('key_fingerprint', models.TextField()),
                ('key_type', models.TextField()),
                ('key_length', models.IntegerField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glacis_core.Entity')),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.TextField()),
                ('name', models.TextField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.TextField()),
                ('name', models.TextField()),
                ('host_name', models.TextField()),
                ('last_ip', models.TextField()),
                ('last_booted', models.DateTimeField(blank=True, null=True)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glacis_core.Organisation')),
            ],
        ),
        migrations.CreateModel(
            name='ServerUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('active', models.BooleanField(default=True)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glacis_core.Server')),
            ],
        ),
        migrations.CreateModel(
            name='KeyFetchEvent',
            fields=[
                ('auditevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='glacis_core.AuditEvent')),
                ('keys_loaded', models.ManyToManyField(to='glacis_core.Key')),
            ],
            bases=('glacis_core.auditevent',),
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('auditevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='glacis_core.AuditEvent')),
                ('username', models.TextField()),
                ('key_fp', models.TextField()),
                ('remote_ip', models.TextField()),
                ('server_ip', models.TextField()),
            ],
            bases=('glacis_core.auditevent',),
        ),
        migrations.CreateModel(
            name='LoginEvent',
            fields=[
                ('auditevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='glacis_core.AuditEvent')),
                ('remote_ip', models.TextField()),
                ('server_ip', models.TextField()),
            ],
            bases=('glacis_core.auditevent',),
        ),
        migrations.AddField(
            model_name='entityonserver',
            name='named_key',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='glacis_core.Key'),
        ),
        migrations.AddField(
            model_name='entityonserver',
            name='server_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glacis_core.ServerUser'),
        ),
        migrations.AddField(
            model_name='entity',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glacis_core.Organisation'),
        ),
        migrations.AddField(
            model_name='entity',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='auditnote',
            name='audit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glacis_core.AuditEvent'),
        ),
        migrations.AddField(
            model_name='auditnote',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='glacis_core.Entity'),
        ),
        migrations.AddField(
            model_name='auditevent',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glacis_core.Server'),
        ),
        migrations.AddField(
            model_name='loginevent',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glacis_core.Entity'),
        ),
        migrations.AddField(
            model_name='loginevent',
            name='key_used',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glacis_core.Key'),
        ),
        migrations.AddField(
            model_name='loginevent',
            name='server_username',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glacis_core.ServerUser'),
        ),
    ]
